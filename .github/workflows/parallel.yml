name: Matrix Scraper
# important to have a descriptive name

on:
  workflow_dispatch:

permissions:
  contents: write
  
jobs:
  # scrape job
  scrape:
    name: Scrape
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        # provide something that can be iterated over
        state: [ca, ia, ny]
    
    steps:
      - name: Hello world
        run: echo "Scraping data for ${{ matrix.state }}"
        
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install scraper
        run: pip install warn-scraper

      # this is where I would point to my own script (.R or .py)
      - name: Scrape
        run: warn-scraper ${{ matrix.state }} --data-dir ./data/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.state }}
          path: ./data/${{ matrix.state }}.csv

  # commit job
  commit:
    name: Commit
    runs-on: ubuntu-latest
    # allows process to proceed linearly
    needs: scrape
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        # parameters provided by download-artifact
        with:
          pattern: '*'
          path: artifacts/

      # little hack to move files so each state goes into a shared folder (overrides the warn-scraper default)
      - name: Move
        # commands that could be run in the command line
        run: |
          mkdir data -p
          mv artifacts/**/*.csv data/

      - name: Save datestamp
        run: date > ./data/latest-scrape.txt

      - name: Commit and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git add ./data/
          git commit -m "Latest data" && git push || true
